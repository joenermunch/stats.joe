{"version":3,"sources":["Components/App.js","index.js"],"names":["App","state","username","images","stats","loading","download","callAPI","e","a","preventDefault","setState","axios","post","response","mappedImages","data","topalbums","album","map","image","mappedStats","artist","name","playcount","makeImage","html2canvas","document","querySelector","allowTaint","useCORS","then","canvas","createElement","href","toDataURL","replace","click","renderDownload","onClick","renderImages","style","background","key","className","renderLoading","onSubmit","type","onChange","target","value","this","id","Component","ReactDOM","render"],"mappings":"mTAsHeA,G,MAhHf,2MACEC,MAAQ,CACNC,SAAU,KACVC,OAAQ,KACRC,MAAO,KACPC,SAAS,EACTC,UAAU,GANd,EASEC,QATF,uCASY,WAAMC,GAAN,mBAAAC,EAAA,6DACRD,EAAEE,iBACF,EAAKC,SAAS,CAAEN,SAAS,IAFjB,SAGeO,IAAMC,KAAK,YAAa,CAC7CX,SAAU,EAAKD,MAAMC,WAJf,OAGFY,EAHE,OAOFC,EAAeD,EAASE,KAAKC,UAAUC,MAAMC,KAAI,SAAAD,GACrD,OAAOA,EAAME,MAAM,GAAG,YAGlBC,EAAcP,EAASE,KAAKC,UAAUC,MAAMC,KAAI,SAAAD,GACpD,MAAO,CACLI,OAAQJ,EAAMI,OAAOC,KACrBL,MAAOA,EAAMK,KACbC,UAAWN,EAAMM,UACjBJ,MAAOF,EAAME,MAAM,GAAG,aAI1B,EAAKT,SAAS,CACZR,OAAQY,EACRX,MAAOiB,EACPhB,SAAS,EACTC,UAAU,IAxBJ,2CATZ,wDAqCEmB,UArCF,sBAqCc,sBAAAhB,EAAA,sEACJiB,IAAYC,SAASC,cAAc,YAAa,CACpDC,YAAY,EACZC,SAAS,IACRC,MAAK,SAAAC,GACN,IAAIvB,EAAIkB,SAASM,cAAc,KAE/BxB,EAAEyB,KAAOF,EACNG,UAAU,cACVC,QAAQ,aAAc,sBACzB3B,EAAEH,SAAW,kBACbG,EAAE4B,WAXM,2CArCd,EAoDEC,eAAiB,WACf,OAA4B,IAAxB,EAAKrC,MAAMK,SACN,4BAAQiC,QAAS,EAAKd,WAAtB,YACK,sCAvDlB,EA0DEe,aAAe,WACb,OAAI,EAAKvC,MAAMG,MACN,EAAKH,MAAMG,MAAMe,KAAI,SAAAG,GAC1B,OACE,yBACEmB,MAAO,CAAEC,WAAW,OAAD,OAASpB,EAAOF,MAAhB,MACnBuB,IAAKrB,EAAOF,MACZwB,UAAU,cAEV,yBAAKA,UAAU,SACb,2BAAItB,EAAOA,QACX,uBAAGsB,UAAU,SAAStB,EAAOJ,OAC7B,uBAAG0B,UAAU,SAAStB,EAAOE,UAA7B,eAKI,sCA3ElB,EA8EEqB,cAAgB,WACd,OAA2B,IAAvB,EAAK5C,MAAMI,QAEX,yBAAKuC,UAAU,WACb,0CAGQ,sCArFlB,wEAwFY,IAAD,OACP,OACE,yBAAKA,UAAU,kBACb,0BAAME,SAAU,SAAAtC,GAAC,OAAI,EAAKD,QAAQC,KAChC,2BACEuC,KAAK,OACLC,SAAU,SAAAxC,GAAC,OAAI,EAAKG,SAAS,CAAET,SAAUM,EAAEyC,OAAOC,WAEpD,4BAAQN,UAAU,gBAAgBL,QAASY,KAAK5C,SAAhD,cAGC4C,KAAKN,iBAER,yBAAKD,UAAU,mBACb,yBAAKA,UAAU,YAAYQ,GAAG,WAC3BD,KAAKX,iBAGV,yBAAKI,UAAU,UAAUO,KAAKb,uBA1GtC,GAAyBe,cCFzBC,IAASC,OAAO,kBAAC,EAAD,MAAS5B,SAASC,cAAc,Y","file":"static/js/main.9ab8ac9f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\nimport html2canvas from \"html2canvas\";\r\nimport canvasToImage from \"canvas-to-image\";\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    username: null,\r\n    images: null,\r\n    stats: null,\r\n    loading: false,\r\n    download: false\r\n  };\r\n\r\n  callAPI = async e => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true });\r\n    const response = await axios.post(\"/api/data\", {\r\n      username: this.state.username\r\n    });\r\n\r\n    const mappedImages = response.data.topalbums.album.map(album => {\r\n      return album.image[2][\"#text\"];\r\n    });\r\n\r\n    const mappedStats = response.data.topalbums.album.map(album => {\r\n      return {\r\n        artist: album.artist.name,\r\n        album: album.name,\r\n        playcount: album.playcount,\r\n        image: album.image[2][\"#text\"]\r\n      };\r\n    });\r\n\r\n    this.setState({\r\n      images: mappedImages,\r\n      stats: mappedStats,\r\n      loading: false,\r\n      download: true\r\n    });\r\n  };\r\n\r\n  makeImage = async () => {\r\n    await html2canvas(document.querySelector(\"#capture\"), {\r\n      allowTaint: true,\r\n      useCORS: true\r\n    }).then(canvas => {\r\n      var a = document.createElement(\"a\");\r\n\r\n      a.href = canvas\r\n        .toDataURL(\"image/jpeg\")\r\n        .replace(\"image/jpeg\", \"image/octet-stream\");\r\n      a.download = \"mytopalbums.jpg\";\r\n      a.click();\r\n    });\r\n  };\r\n\r\n  renderDownload = () => {\r\n    if (this.state.download === true) {\r\n      return <button onClick={this.makeImage}>Download</button>;\r\n    } else return <></>;\r\n  };\r\n\r\n  renderImages = () => {\r\n    if (this.state.stats) {\r\n      return this.state.stats.map(artist => {\r\n        return (\r\n          <div\r\n            style={{ background: `url(${artist.image})` }}\r\n            key={artist.image}\r\n            className=\"image-item\"\r\n          >\r\n            <div className=\"stats\">\r\n              <p>{artist.artist}</p>\r\n              <p className=\"album\">{artist.album}</p>\r\n              <p className=\"plays\">{artist.playcount} plays</p>\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    } else return <></>;\r\n  };\r\n\r\n  renderLoading = () => {\r\n    if (this.state.loading === true) {\r\n      return (\r\n        <div className=\"loading\">\r\n          <p>Loading...</p>\r\n        </div>\r\n      );\r\n    } else return <></>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-container\">\r\n        <form onSubmit={e => this.callAPI(e)}>\r\n          <input\r\n            type=\"text\"\r\n            onChange={e => this.setState({ username: e.target.value })}\r\n          />\r\n          <button className=\"submit-button\" onClick={this.callAPI}>\r\n            Get Images\r\n          </button>\r\n          {this.renderLoading()}\r\n        </form>\r\n        <div className=\"image-container\">\r\n          <div className=\"image-box\" id=\"capture\">\r\n            {this.renderImages()}\r\n          </div>\r\n        </div>\r\n        <div className=\"result\">{this.renderDownload()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}